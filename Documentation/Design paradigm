For our project 3 prototype we chose an object oriented design paradigm. Our prototype was designing an app that gave the user a random character with a picture and supporting
information about that person. We used Python as our primary language, which leads itself as object oriented. One of the main reasons we choose an object oriented language was 
because we needed multiple classes for our application. First of all, we needed a class that imported flask and set up the web application. Flask is a web framework for python 
that helps build a web application so it was very important for our prototype. Additionally, we also needed a class that imported and processed our character information. This 
class had a bunch of methods to extract information about a random character that was generated using a random character API(Application Programming Interface). Finally, we had 
a class that defined routes to our various webpages that outputted information about these characters to the front-end user in our application. Another aspect of our object 
oriented design was the ability to create a character object. This character object helped us access any information about the character by using syntax such as 
character.get(‘name’). This was beneficial as we used information about the same character across multiple methods using the character object. In addition to using objects
across multiple methods, we were also able to use methods across multiple classes. This was helpful for designing our webpages as we could simply call methods that outputted
character info  in order to have it displayed. Overall, our object oriented-design paradigm gave us a lot of flexibility and functionality in our prototype.
